import java.util.ArrayList;

public class GenericStack<T> {
    private ArrayList<T> items;
    private int top;

    public GenericStack() {
        items = new ArrayList<>();
        top = 0;
    }

    private boolean isEmpty() {
        return top == 0;
    }

    public void push(T item) {
        items.add(item);
        top++;
    }

    public T pop() {
        if (isEmpty()) {
            throw new GenericStackException("Underflow Error");
        }
        return items.remove(--top);
    }
}

public class GenericStackException extends RuntimeException {
	public GenericStackException(String message) {
		
	}

}
public class StackDriver {
    public static void main(String[] args) {
        GenericStack<Integer> stack = new GenericStack<>();

        stack.push(1);
        stack.push(2);
        stack.push(3);
        stack.push(4);

        try {
            for (int i = 0; i < 5; i++) {
                System.out.println("Popped: " + stack.pop());
            }
        } catch (GenericStackException e) {
            System.out.println(e.getMessage());
        }
    }
}

